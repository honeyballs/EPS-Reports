html
      head
            script(src = 'https://code.jquery.com/jquery-3.3.1.min.js' integrity='sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=' crossorigin='anonymous')
            script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.js')
            script(type="text/javascript" src='/main.js')
            link(rel='stylesheet', href='/index.css')
            link(href="https://fonts.googleapis.com/css?family=Rasa:300" rel="stylesheet")

            link(href="https://unpkg.com/tabulator-tables@4.1.1/dist/css/tabulator.min.css" rel="stylesheet")
            script(type="text/javascript" src="https://unpkg.com/tabulator-tables@4.1.1/dist/js/tabulator.min.js")
            script.

                  let zeroOptions =  {
                        scales: {
                              yAxes: [{
                                    ticks: {
                                          beginAtZero:true
                                    }
                              }]
                        }
                  }
                  
                  function setTitleAndHeader(title) {
                        document.title = title;
                        $("#report-headline").text(title);
                  }

                  function createRandomColor() {
                        let randomizer = () => Math.floor(Math.random() * (255 - 1));
                        return `rgba(${randomizer()}, ${randomizer()}, ${randomizer()}, 0.5)`;
                  }

                  function createReport(report) {
                        var id=0;

                        report.tables.forEach(function(table) {
                              // Create the title and canvas to insert the diagram into
                              id += 1;
                              let titleId = "table-title-" + id;
                              let divId = "div-" + id;

                              $('<h2>').attr({
                                    id: titleId
                              }).text(table.title).appendTo('#report');

                              $('<div>').attr({
                                    id: divId,
                                    class: 'table-div'
                              }).appendTo('#report');

                              createTabulator(table, '#' + divId);
                        });

                        report.diagrams.forEach(function(diagram) {
                              // Create the title and canvas to insert the diagram into
                              id += 1;
                              let titleId = "diagramm-title-" + id;
                              let canvasId = "canvas-" + id;

                              $('<h2>').attr({
                                    id: titleId
                              }).text(diagram.title).appendTo('#report');

                              $('<canvas>').attr({
                                    id: canvasId
                              }).appendTo('#report');

                              // Create the diagram
                              createChart(diagram, canvasId);

                        });
                  };

                  function createTabulator(data, id) {

                        // Sort the columns
                        data.columns.sort((a, b) => {
                              if (a.order < b.order) {
                                    return -1;
                              } else if (a.order > b.order) {
                                    return 1;
                              }
                                    return 0;
                        })

                        let tableData = {
                              data: data.data,
                              layout: "fitColumns",
                              groupBy: data.groupBy,
                              columns: data.columns.map(column => ({title: column.name, field: column.name, align: 'left'})),
                        }

                        console.log(tableData);

                        let table = new Tabulator(id, tableData)
                  }

                  function createChart(diagram, canvasId) {
                        // Create a color array for each dataset
                        diagram.datasets.forEach( dataset => {
                              let colorArray = [];
                              let color = createRandomColor();
                              if (diagram.type.toLowerCase() === 'pie') {
                                    dataset.data.forEach( data => {
                                          colorArray.push(createRandomColor());
                                    });
                              } else {
                                    dataset.data.forEach( data => {
                                          colorArray.push(color);
                                    });
                              }
                              dataset.backgroundColor = colorArray;
                              if (diagram.type.toLowerCase() === 'line') {
                                    dataset.borderColor = color;
                              }
                        });
                        let ctx = $("#"+canvasId)[0].getContext('2d');
                        if (diagram.type.toLowerCase() === 'line') {
                              createLineChart(ctx, diagram);
                        } else {
                              let myChart = new Chart(ctx, {
                                    type: diagram.type.toLowerCase(),
                                    data: {
                                          labels: diagram.labels,
                                          datasets: diagram.datasets
                                    },
                                    options: diagram.type.toLowerCase() !== 'pie' ? zeroOptions : {}
                              });
                        }
                  }

                  function createLineChart(ctx, diagram) {
                        let datasets = diagram.datasets;
                        // If fill is not set to false, the line looks whack
                        let datasetsWithOptions = datasets.map( ds => ({...ds, fill: false}))
                        let chart = new Chart(ctx, {
                              type: diagram.type.toLowerCase(),
                              data: {
                                    labels: diagram.labels,
                                    datasets: datasetsWithOptions
                              },
                              options: zeroOptions
                        })
                  }

                  function createBarChart(labels, datasets) {
                        console.log(labels);
                        console.log(datasets);
                        let ctx = $( "#bar-chart" )[0].getContext('2d');
                        let myChart = new Chart(ctx, {
                              type: 'bar',
                              data: {
                                    labels: labels,
                                    datasets: datasets
                              }, 
                              options: {
                                    scales: {
                                          yAxes: [{
                                                ticks: {
                                                      beginAtZero:true
                                                }
                                          }]
                                    }
                              }
                        })
                  }
      title Report
      body
            script.    
                  $( document ).ready(function() {
                        let report = !{report};
                        setTitleAndHeader(report.title);
                        createReport(report);
                        console.log(report);
                  }) 
            h1(id='report-headline')
            div(id='report')
            

